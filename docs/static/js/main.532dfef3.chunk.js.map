{"version":3,"sources":["components/AddCategory.js","helpers/getGift.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGrid.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","className","getGift","a","url","encodeURI","fetch","response","json","data","gifts","map","id","title","images","downsized_medium","GiftGridItem","src","alt","key","GiftGrid","loading","state","setState","console","log","useEffect","then","imgs","setTimeout","useFetchGrid","img","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAY,SAAAS,GAAQ,OAAKP,GAAL,mBAAqBO,OACzCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAST,EACTU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAkBfG,UAAU,iB,uBC1BZC,EAAO,uCAAG,WAAMN,GAAN,uBAAAO,EAAA,6DACdC,EADc,mGACqFC,UAAUT,IAD/F,SAEGU,MAAMF,GAFT,cAEdG,EAFc,gBAGGA,EAASC,OAHZ,uBAGZC,EAHY,EAGZA,KAEFC,EAAQD,EAAKE,KAAI,SAACF,GACpB,MAAO,CACHG,GAAKH,EAAKG,GACVC,MAAOJ,EAAKI,MACZT,IAAKK,EAAKK,OAAOC,iBAAiBX,QATtB,kBAYbM,GAZa,4CAAH,sDCERM,EAAe,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAGnC,OACI,yBAAKH,UAAU,8CACX,yBAAKgB,IAAKb,EAAKc,IAAI,KACnB,uBAAGC,IAAKP,GAAKC,KCJZO,EAAW,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAAe,ECDd,SAACA,GAAc,IAAD,EACZR,mBAAS,CAC/BqB,KAAK,GACLY,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAqBtC,OAfAC,QAAQC,IAAI7B,GAEZ8B,qBAAU,WACNxB,EAAQN,GACH+B,MAAK,SAAAC,GACFC,YAAW,WACXN,EAAS,CACLd,KAAKmB,EACLP,SAAS,MAEd,UAET,CAACzB,IAGI0B,EDlBgBQ,CAAalC,GAA7Ba,EAF+B,EAE/BA,KAAKY,EAF0B,EAE1BA,QAIZ,OAFAG,QAAQC,IAAIhB,GAGR,oCACI,gCAAOb,EAAP,KAEIyB,GAAW,uBAAGpB,UAAU,oCAAb,eAEf,yBAAKA,UAAU,aAEHQ,EAAKE,KAAI,SAACoB,GACN,OACI,kBAAC,EAAD,eACIZ,IAAKY,EAAInB,IACLmB,UEUzBC,EA3BO,WAAK,IAAD,EAEU5C,mBAAS,CAAC,UAFpB,mBAEfQ,EAFe,KAELT,EAFK,KAQtB,OACI,oCACI,wCACA,kBAAC,EAAD,CAAaA,YAAcA,IAC3B,6BACA,6BAEQS,EAASe,KAAI,SAAAf,GACT,OAAO,kBAAC,EAAD,CAAWuB,IAAQvB,EAAWA,SAAaA,U,MChB1EqC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.532dfef3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategory} ) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        // console.log(setcategory)\r\n        if(inputValue.trim().length > 2){\r\n            setCategory(category => [inputValue , ...category]) \r\n            setinputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                value = {inputValue}\r\n                onChange={handleInputChange}\r\n                className=\"form-input\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}\r\n","export  const getGift = async(category)=>{ \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=ir5rz0vc6y0j6G9V9EQ4SmKZgN7F5g7F&limit=10&q=${ encodeURI(category) }`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n    \r\n    const gifts = data.map((data)=>{\r\n        return {\r\n            id : data.id,\r\n            title: data.title,\r\n            url: data.images.downsized_medium.url\r\n        }\r\n    });\r\n    return gifts;\r\n}","import React from 'react'\r\n\r\nexport const GiftGridItem = ({id,title,url}) => {\r\n    \r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeft\">\r\n            <img src={url} alt=\"\"/>\r\n            <p key={id}>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGrid } from '../hooks/useFetchGrid'\r\nimport { GiftGridItem } from './GiftGridItem'\r\n\r\nexport const GiftGrid = ( {category} ) => {\r\n    \r\n    const {data,loading} = useFetchGrid(category);\r\n\r\n    console.log(data)\r\n\r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n            {\r\n                loading && <p className=\"animate__animated animate__flash\">Cargando...</p>\r\n            }\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        data.map((img)=>{\r\n                            return(\r\n                                <GiftGridItem \r\n                                    key={img.id}\r\n                                    {...img}\r\n                                />\r\n                                )\r\n                        })\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGift } from \"../helpers/getGift\";\r\n\r\nexport const useFetchGrid = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    console.log(category)\r\n\r\n    useEffect(()=>{\r\n        getGift(category)\r\n            .then(imgs=>{\r\n                setTimeout(() => {\r\n                setState({\r\n                    data:imgs,\r\n                    loading: false\r\n                })\r\n            }, 3000);\r\n        })\r\n    },[category])\r\n\r\n    \r\n    return state\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\n\r\nconst GiftExpertApp = ()=>{\r\n    \r\n    const [category, setCategory] = useState(['Gatos']) \r\n    \r\n    // const handleAdd = ()=>{\r\n    //     setCategory([...category ,'pikachu'])\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>Gift App</h2>\r\n            <AddCategory setCategory={ setCategory }/>\r\n            <hr/>\r\n            <div>\r\n                {\r\n                    category.map(category=>{\r\n                        return <GiftGrid  key = { category } category = { category } />\r\n                    })\r\n                }\r\n            </div>\r\n            {/* <button onClick={handleAdd}>Agregar</button>     */}\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}